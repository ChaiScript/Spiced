class Travel_To {
  def Travel_To(string t_name, int t_cost, int t_x, int t_y) {
    this.name = t_name;
    this.cost = t_cost;
    this.x = t_x;
    this.y = t_y;
  }

  var name;
  var cost;
  var x;
  var y;
}

def make_signpost_actions(Vector t_locations) {
  var actions = [];

  for(var i = 0; i < t_locations.size(); ++i) {
    var x = t_locations[i].x;
    var y = t_locations[i].y;
    var cost = t_locations[i].cost;

    actions.push_back_ref(
      Object_Action("Travel to ${t_locations[i].name} (costs: ${t_locations[i].cost})",
        fun[x,y,cost](t_game_time, t_simulation_time, t_game, t_obj)
        {
          t_game.teleport_to_tile(x,y);
        }
      )
    );
  }
  actions.push_back_ref(Object_Action("Done", fun(t_game_time, t_simulation_time, t_game, t_obj){}));

  return fun[actions](t_game_time, t_simulation_time, t_game, t_obj)
            {
              return actions;
            }
}


var game_creator = fun(game) {

  // create the tilemap from the level definition
  var map = Tile_Map(game, "resources/Maps/worldmap.json", [Tile_Defaults(2, Tile_Properties(false))]);




  var collision_action = fun(t_game_time, t_simulation_time, t_game, t_obj, t_collision)
  {
    t_obj.get_actions(t_game_time, t_simulation_time, t_game);
    t_game.show_object_interaction_menu(t_game_time, t_simulation_time, t_obj);
  };

  // Glenn Haven
  map.set_collision_action("glennhaven_signpost", collision_action);
  map.set_action_generator("glennhaven_signpost", make_signpost_actions(
      [Travel_To("Fairview", 5, 12, 12),
       Travel_To("Mineralville", 10, 12, 6)]));

  map.set_collision_action("glennhaven",
    fun(t_game_time, t_simulation_time, t_game, t_obj, t_sprite) {
      t_game.enter_map("glennhaven");
    }
  );

  var glennhaven = Tile_Map(game, "resources/Maps/glennhaven.json", []);
  glennhaven.add_enter_action(
      fun(t_game) {
        t_game.teleport_to_tile(9, 4);
      }
    );

  glennhaven.set_collision_action("ExitSquare",
    fun(t_game_time, t_simulation_time, t_game, t_obj, t_sprite) {
      t_game.enter_map("world");
      t_game.teleport_to_tile(2,12);
    }
  );


  var YoungEntrepeneur_conversation_tree =
    Conversation([
      Question("Hello",
        [Answer("YoungEntrepeneur", "Hi! Welcome to Glenn Haven.\nI've just opened up shop here.\nI think you'll like our prices on bread!")],
        fun(t_game_time, t_simulation_time, t_game, t_obj){ true },
        fun(t_game_time, t_simulation_time, t_game, t_obj){  }
      )
    ]);



  var YoungEntrepeneur_actions = fun[YoungEntrepeneur_conversation_tree](t_game_time, t_simulation_time, t_game, t_obj){
    return [
      Object_Action("Look",
        fun(t_game_time, t_simulation_time, t_game, t_obj)
        {
          t_game.show_message_box("The proprietor of this trading post");
        }
      ),
      Object_Action("Talk To",
        fun[YoungEntrepeneur_conversation_tree](t_game_time, t_simulation_time, t_game, t_obj)
        {
          t_game.show_conversation(t_game_time, t_simulation_time, t_obj, YoungEntrepeneur_conversation_tree);
        }
      )
    ];
  };

  glennhaven.set_collision_action("YoungEntrepeneur", collision_action);
  glennhaven.set_action_generator("YoungEntrepeneur", YoungEntrepeneur_actions);

  game.add_map("glennhaven", glennhaven);


  // Fairview
  map.set_collision_action("fairview_signpost", collision_action);
  map.set_action_generator("fairview_signpost", make_signpost_actions(
      [Travel_To("Glenn Haven", 5, 3, 12),
       Travel_To("Mineralville", 8, 12, 6)]));

  map.set_collision_action("fairview",
    fun(t_game_time, t_simulation_time, t_game, t_obj, t_sprite) {
      t_game.enter_map("fairview");
    }
  );

  var fairview = Tile_Map(game, "resources/Maps/fairview.json", []);
  fairview.add_enter_action(
      fun(t_game) {
        t_game.teleport_to_tile(9, 4);
      }
    );

  fairview.set_collision_action("ExitSquare",
    fun(t_game_time, t_simulation_time, t_game, t_obj, t_sprite) {
      t_game.enter_map("world");
      t_game.teleport_to_tile(13,12);
    }
  );

  game.add_map("fairview", fairview);

  // Mineralville
  map.set_collision_action("mineralville_signpost", collision_action);
  map.set_action_generator("mineralville_signpost", make_signpost_actions(
      [Travel_To("Glenn Haven", 10, 3, 12),
       Travel_To("Fairview", 8, 12, 12),
       Travel_To("Camp", 15, 8, 1)]));

  map.set_collision_action("mineralville",
    fun(t_game_time, t_simulation_time, t_game, t_obj, t_sprite) {
      t_game.enter_map("mineralville");
    }
  );

  var mineralville = Tile_Map(game, "resources/Maps/mineralville.json", []);
  mineralville.add_enter_action(
      fun(t_game) {
        t_game.teleport_to_tile(9, 4);
      }
    );
  mineralville.set_collision_action("ExitSquare",
    fun(t_game_time, t_simulation_time, t_game, t_obj, t_sprite) {
      t_game.enter_map("world");
      t_game.teleport_to_tile(14,5);
    }
  );

  game.add_map("mineralville", mineralville);

  // Camp
  map.set_collision_action("camp_signpost", collision_action);
  map.set_action_generator("camp_signpost", make_signpost_actions(
      [Travel_To("Mineralville", 15, 12, 6)]));

  map.set_collision_action("camp",
    fun(t_game_time, t_simulation_time, t_game, t_obj, t_sprite) {
      t_game.enter_map("camp");
    }
  );

  var camp = Tile_Map(game, "resources/Maps/camp.json", []);
  camp.add_enter_action(
      fun(t_game) {
        t_game.teleport_to_tile(9, 4);
      }
    );
  camp.set_collision_action("ExitSquare",
    fun(t_game_time, t_simulation_time, t_game, t_obj, t_sprite) {
      t_game.enter_map("world");
      t_game.teleport_to_tile(7,1);
    }
  );

  game.add_map("camp", camp);

  game.add_map("world", map);
  game.set_avatar(game.get_texture("resources/pinheads_marble.png"));



  game.set_zoom(.5);

  game.add_start_action(
      fun(t_game) {
        t_game.show_message_box("Welcome to\nPinheads:\n   Everything You Need.");
        t_game.add_queued_action(
          fun(t_game_time, t_simulation_time, t_game) {
            t_game.enter_map("glennhaven");
          }
        );
      }
    );


}
